name: Manual Trigger with JSON Parameters

on:
  workflow_dispatch:
    inputs:
      json_parameters:
        description: 'JSON parameters for the workflow'
        required: true
        default: '{"environment": "development", "version": "1.0.0", "features": ["feature1", "feature2"]}'
        type: string
      environment:
        description: 'Target environment'
        required: false
        default: 'development'
        type: choice
        options:
        - development
        - staging
        - production
      dry_run:
        description: 'Perform a dry run'
        required: false
        default: false
        type: boolean

jobs:
  process-parameters:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
      
    - name: Display input parameters
      run: |
        echo "=== Workflow Inputs ==="
        echo "JSON Parameters: ${{ github.event.inputs.json_parameters }}"
        echo "Environment: ${{ github.event.inputs.environment }}"
        echo "Dry Run: ${{ github.event.inputs.dry_run }}"
        echo "======================="
        
    - name: Parse and validate JSON
      id: parse-json
      run: |
        echo "Parsing JSON parameters..."
        JSON_INPUT='${{ github.event.inputs.json_parameters }}'
        
        # Validate JSON format
        if ! echo "$JSON_INPUT" | jq empty 2>/dev/null; then
          echo "Error: Invalid JSON format"
          exit 1
        fi
        
        # Extract values from JSON
        ENVIRONMENT=$(echo "$JSON_INPUT" | jq -r '.environment // "not_specified"')
        VERSION=$(echo "$JSON_INPUT" | jq -r '.version // "not_specified"')
        FEATURES=$(echo "$JSON_INPUT" | jq -r '.features // [] | join(",")')
        
        echo "Parsed values:"
        echo "Environment: $ENVIRONMENT"
        echo "Version: $VERSION"
        echo "Features: $FEATURES"
        
        # Set outputs for use in other steps
        echo "environment=$ENVIRONMENT" >> $GITHUB_OUTPUT
        echo "version=$VERSION" >> $GITHUB_OUTPUT
        echo "features=$FEATURES" >> $GITHUB_OUTPUT
        
    - name: Use parsed parameters
      run: |
        echo "Using parsed parameters in workflow logic..."
        echo "Environment: ${{ steps.parse-json.outputs.environment }}"
        echo "Version: ${{ steps.parse-json.outputs.version }}"
        echo "Features: ${{ steps.parse-json.outputs.features }}"
        
        # Example conditional logic based on parameters
        if [ "${{ github.event.inputs.dry_run }}" == "true" ]; then
          echo "🔍 DRY RUN MODE - No actual changes will be made"
        else
          echo "🚀 LIVE MODE - Changes will be applied"
        fi
        
        # Example environment-specific logic
        case "${{ steps.parse-json.outputs.environment }}" in
          "production")
            echo "📦 Production deployment logic would go here"
            ;;
          "staging")
            echo "🧪 Staging deployment logic would go here"
            ;;
          "development")
            echo "🔧 Development deployment logic would go here"
            ;;
          *)
            echo "🤷 Unknown environment: ${{ steps.parse-json.outputs.environment }}"
            ;;
        esac
        
        # Example feature flag logic
        IFS=',' read -ra FEATURE_ARRAY <<< "${{ steps.parse-json.outputs.features }}"
        for feature in "${FEATURE_ARRAY[@]}"; do
          echo "✅ Processing feature: $feature"
        done
        
    - name: Summary
      run: |
        echo "=== Workflow Summary ==="
        echo "Triggered manually with parameters:"
        echo "- Environment: ${{ github.event.inputs.environment }}"
        echo "- Dry Run: ${{ github.event.inputs.dry_run }}"
        echo "- JSON Parameters processed successfully"
        echo "- Parsed Environment: ${{ steps.parse-json.outputs.environment }}"
        echo "- Parsed Version: ${{ steps.parse-json.outputs.version }}"
        echo "- Parsed Features: ${{ steps.parse-json.outputs.features }}"
        echo "======================="